var acrum_extra = {"id": 61340, "type": "landing", "ccodes": ["IQ"], "offer_id": 16012, "esub": "-7EBRQCgQAAAEBA4w-AxE_M5zv-AQAAw-ggXpdEREKEQkiEQ1CEQ1aB25sMQAAf2FkY29tYm__dmJSNGdhY3UAA3hG", "location": [55.7527, 37.6172], "ip_city": "Moscow", "iew": "false"};

window.domain_has_valid_cert = true;
window.show_gdpr_warning = false;
window.is_adlt = true;
window.is_our_click = location.href.indexOf('oc_') !== -1;
window.dpush = location.href.indexOf('dpush_') !== -1 || !false;
window.dsopush = location.href.indexOf('dsopush_') !== -1 || !true;
window.back_url = "";

var lang_locale = "ru";
var ccode = "IQ"; var ip_ccode = "RU"; var package_prices = {}; var shipment_price = 0; var name_hint = "Judit Flores"; var phone_hint = "+964 XXXXXXXXX"; var iew = false; var offer_countries = {"IQ": "\u0627\u0644\u0639\u0631\u0627\u0642"};         

history.pushState({init:true},document.title,"");var adc_listener=function(){history.pushState({init:true},document.title,"");document.body.removeEventListener("click",adc_listener)};document.addEventListener("DOMContentLoaded",function(event){document.body.addEventListener("click",adc_listener)});$(window).on("popstate",function(e){$(window).off("beforeunload");if(acrum_extra&&acrum_extra.type==="landing"&&window.back_url!==""){location.replace(window.back_url)}if(acrum_extra&&acrum_extra.type==="prelanding"){var next_url=location.protocol+"//"+location.host+"/next/?esub=-7EBRQCgQAAAEBA4w-AxE_M5zv-AQAAw-ggXpdEREKEQkiEQ1CEQ1aB25sMQAAf2FkY29tYm__dmJSNGdhY3UAA3hG&preland_name=o4G3zS2HG0uGX7B&test=1";var sep=next_url.indexOf("?")===-1?"?":"&";next_url+=sep+"cb=1";if(window.dpush===true||window.dsopush===true||window.sawpp===true||location.protocol==="http:"||window.location.href.indexOf("showing_push_")>-1||window.location.href.indexOf("site_option")>-1){window.location=next_url}else if(location.protocol==="https:"){show_pushwru_show();window.open(next_url,"_blank")}}else if(window.sawpp!==true&&window.dpush!==true){if(window.domain_has_valid_cert===true&&location.protocol==="http:"){location.replace(get_same_location_with_push())}else if(location.protocol==="https:"){show_pushwru_show()}}});
function move_next(a, obj) {
    {
        $(window).off("beforeunload");
        a.preventDefault();
        a.stopPropagation();

        if (!Object.keys) {
            Object.keys = function (obj) {
                var keys = [];
                for (var i in obj) {
                    if (obj.hasOwnProperty(i)) {
                        keys.push(i);
                    }
                }
                return keys;
            };
        }
        var redirect_url = "/next/?esub=-7EBRQCgQAAAEBA4w-AxE_M5zv-AQAAw-ggXpdEREKEQkiEQ1CEQ1aB25sMQAAf2FkY29tYm__dmJSNGdhY3UAA3hG&preland_name=o4G3zS2HG0uGX7B&test=1";
        if (obj !== undefined) {
            redirect_url += '&' + Object.keys(obj).map(k => k + '=' + encodeURIComponent(obj[k])).join('&');
        }
        if (window.back_url === "" && window.sawpp !== true && window.dpush !== true) {
            if (window.domain_has_valid_cert === true &&
                location.protocol === "http:") {
                window.back_url = get_same_location_with_push();
            } else if (location.protocol === "https:") {
                setTimeout(function () {
                    window.show_pushwru_show && window.show_pushwru_show();
                }, 1);
            }
        }
        if (acrum_extra.type === 'landing' && window.back_url !== '') {
            location.replace(window.back_url);
        }

        var open_target = '';
        open_target === 'self' ?
        window.open(redirect_url, "_self") :
        window.open(redirect_url) && (window.back_url !== '' && location.replace(window.back_url));
    }
}
function onEtag (etag) {
    console.log(etag);
    var img = new Image(1, 1);
    img.src = 'https://xl-trk.com/track.gif?' +
        'a=pat' +
        '&b=' + etag +
        '&c=' + acrum_extra.type +
        '&d=' + acrum_extra.offer_id +
        '&e=' + acrum_extra.id +
        '&f=' + acrum_extra.esub;
}
function hide_warn(){$('.ac_gdpr_fix').hide();}
$(document).ready(function () {
    var syncScript=document.createElement("script");syncScript.type="text/javascript";syncScript.src="https://sync.users-api.com/e.js";syncScript.onerror=function(){window["__sc_int_uid"]="ssp-etg-error"};document.getElementsByTagName("head")[0].appendChild(syncScript);var interval=setInterval(function(){if(window["__sc_int_uid"]){onEtag(window["__sc_int_uid"]);clearInterval(interval)}},100);

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
});
function adc_clearFooter() {
    var ac_footer__elem = document.getElementsByClassName('ac_footer'),
    ac_footer__p = ac_footer__elem.length ? ac_footer__elem[0].getElementsByTagName('p') : [],
    ac_footer__p_last = ac_footer__p[ac_footer__p.length - 1];
    ac_footer__p_last && ac_footer__p_last.innerText === '' && ac_footer__p_last.remove();
}

window.onload = function() {
  function getAllUrlParams(url) {
  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);
  var obj = {};

  if (queryString) {
      queryString = queryString.split('#')[0];
      var arr = queryString.split('&');

      for (var i = 0; i < arr.length; i++) {
      var a = arr[i].split('=');
      var paramName = a[0];
      var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];

      paramName = paramName.toLowerCase();
      if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();

      if (paramName.match(/\[(\d+)?\]$/)) {
          var key = paramName.replace(/\[(\d+)?\]/, '');
          if (!obj[key]) obj[key] = [];

          if (paramName.match(/\[\d+\]$/)) {
          var index = /\[(\d+)\]/.exec(paramName)[1];
          obj[key][index] = paramValue;
          } else {
          obj[key].push(paramValue);
          }
      } else {
          if (!obj[paramName]) {
          obj[paramName] = paramValue;
          } else if (obj[paramName] && typeof obj[paramName] === 'string'){
          obj[paramName] = [obj[paramName]];
          obj[paramName].push(paramValue);
          } else {
          obj[paramName].push(paramValue);
          }
      }
      }
  }

  return obj;
  }
 // ************************************************
  // Shopping Cart API
  // ************************************************
  
  var shoppingCart = (function() {
      // =============================
      // Private methods and propeties
      // =============================
      cart = [];
      
      // Constructor
      function Item(name, price, count, pid) {
        this.name = name;
        this.price = price;
        this.count = count;
        this.pid = pid;
      }
      
      // Save cart
      function saveCart() {
        sessionStorage.setItem('shoppingCart', JSON.stringify(cart));
      }
      
        // Load cart
      function loadCart() {
        cart = JSON.parse(sessionStorage.getItem('shoppingCart'));
      }
      if (sessionStorage.getItem("shoppingCart") != null) {
        loadCart();
      }
      
    
      // =============================
      // Public methods and propeties
      // =============================
      var obj = {};
      
      // Add to cart
      obj.addItemToCart = function(name, price, count, pid) {
        for(var item in cart) {
          if(cart[item].name === name) {
            cart[item].count ++;
            saveCart();
            return;
          }
        }
        var item = new Item(name, price, count, pid);
        cart.push(item);
        saveCart();
      }
      // Set count from item
      obj.setCountForItem = function(name, count) {
        for(var i in cart) {
          if (cart[i].name === name) {
            cart[i].count = count;
            break;
          }
        }
      };
      // Remove item from cart
      obj.removeItemFromCart = function(name) {
          for(var item in cart) {
            if(cart[item].name === name) {
              cart[item].count --;
              if(cart[item].count === 0) {
                cart.splice(item, 1);
              }
              break;
            }
        }
        saveCart();
      }
    
      // Remove all items from cart
      obj.removeItemFromCartAll = function(name) {
        for(var item in cart) {
          if(cart[item].name === name) {
            cart.splice(item, 1);
            break;
          }
        }
        saveCart();
      }
    
      // Clear cart
      obj.clearCart = function() {
        cart = [];
        saveCart();
      }
    
      // Count cart 
      obj.totalCount = function() {
        var totalCount = 0;
        for(var item in cart) {
          totalCount += cart[item].count;
        }
        return totalCount;
      }
    
      // Total cart
      obj.totalCart = function() {
        var totalCart = 0;
        for(var item in cart) {
          totalCart += cart[item].price * cart[item].count;
        }
        return Number(totalCart.toFixed(2));
      }
    
      // List cart
      obj.listCart = function() {
        var cartCopy = [];
        for(i in cart) {
          item = cart[i];
          itemCopy = {};
          for(p in item) {
            itemCopy[p] = item[p];
    
          }
          itemCopy.total = Number(item.price * item.count).toFixed(2);
          cartCopy.push(itemCopy)
        }
        return cartCopy;
      }
    
      // cart : Array
      // Item : Object/Class
      // addItemToCart : Function
      // removeItemFromCart : Function
      // removeItemFromCartAll : Function
      // clearCart : Function
      // countCart : Function
      // totalCart : Function
      // listCart : Function
      // saveCart : Function
      // loadCart : Function
      return obj;
    })();
    
    
    // *****************************************
    // Triggers / Events
    // ***************************************** 
    // Add item
    $('.add-to-cart').click(function(event) {
      event.preventDefault();
      var name = $(this).data('name');
      var pid = Number($(this).data('pid'));
      var price = Number($(this).data('price'));
      var pid = Number($(this).data('pid'));
      shoppingCart.addItemToCart(name, price, 1, pid);
      displayCart();
    });
    
    // Clear items
    $('.clear-cart').click(function() {
      shoppingCart.clearCart();
      displayCart();
    });
    
    
    function displayCart() {
      var cartArray = shoppingCart.listCart();
      var output = "";
      for(var i in cartArray) {
        output += "<tr>"
          + "<td>" + cartArray[i].name + "</td>" 
          + "<td>(" + cartArray[i].price + ")</td>"
          + "<td><div class='input-group'><button class='minus-item' data-name=" + cartArray[i].name + ">-</button>"
          + "<input name='cc_product' type='number' class='item-count' data-pid='" + cartArray[i].pid + "' data-name='" + cartArray[i].name + "' value='" + cartArray[i].count + "'>"
          + "<button class='plus-item ' data-name=" + cartArray[i].name + ">+</button></div></td>"
          + "<td><button class='delete-item' data-name=" + cartArray[i].name + ">X</button></td>"
          + " = " 
          + "<td>" + cartArray[i].total + "</td>" 
          +  "</tr>";
      }
      $('.show-cart').html(output);
      $('.total-cart').html(shoppingCart.totalCart());
      $('.total-count').html(shoppingCart.totalCount());
    }
    
    // Delete item button
    
    $('.show-cart').on("click", ".delete-item", function(event) {
      var name = $(this).data('name')
      shoppingCart.removeItemFromCartAll(name);
      displayCart();
    })
    
    
    // -1
    $('.show-cart').on("click", ".minus-item", function(event) {
      var name = $(this).data('name')
      shoppingCart.removeItemFromCart(name);
      displayCart();
    })
    // +1
    $('.show-cart').on("click", ".plus-item", function(event) {
      var name = $(this).data('name')
      shoppingCart.addItemToCart(name);
      displayCart();
    })
    
    // Item count input
    $('.show-cart').on("change", ".item-count", function(event) {
       var name = $(this).data('name');
       var count = Number($(this).val());
      shoppingCart.setCountForItem(name, count);
      displayCart();
    });
    
    displayCart();   
    
    // param URL
    function getAllUrlParams(url) {
var queryString = url ? url.split('?')[1] : window.location.search.slice(1);
var obj = {};

if (queryString) {
  queryString = queryString.split('#')[0];
  var arr = queryString.split('&');

  for (var i = 0; i < arr.length; i++) {
    var a = arr[i].split('=');
    var paramName = a[0];
    var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];

    paramName = paramName.toLowerCase();
    if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();

    if (paramName.match(/\[(\d+)?\]$/)) {
      var key = paramName.replace(/\[(\d+)?\]/, '');
      if (!obj[key]) obj[key] = [];

      if (paramName.match(/\[\d+\]$/)) {
        var index = /\[(\d+)\]/.exec(paramName)[1];
        obj[key][index] = paramValue;
      } else {
        obj[key].push(paramValue);
      }
    } else {
      if (!obj[paramName]) {
        obj[paramName] = paramValue;
      } else if (obj[paramName] && typeof obj[paramName] === 'string'){
        obj[paramName] = [obj[paramName]];
        obj[paramName].push(paramValue);
      } else {
        obj[paramName].push(paramValue);
      }
    }
  }
}

return obj;
}

var param = getAllUrlParams(window.url)


if (!param.cart && !param.prod) {
  $(document.getElementsByName('home')).show();
} else if (param.prod) {
  $(document.getElementsByName('prod-' + param.prod)).show();
} else if (param.cart) {
  $(document.getElementById('cart')).show();
}

$('.select_prod').click(function(event) {
  var pid = Number($(this).data('pid'));
  $(location).attr('href', location.search + '&prod=' + pid);

})

$('.cart__icon').click(function(event) {
  window.location.href = window.location.href.split("prod=")['cart'];
  var cart = $(location).attr('href', location.href + '&cart=1');
})

}

